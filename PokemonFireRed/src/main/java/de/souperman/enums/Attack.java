package de.souperman.enums;

import org.checkerframework.checker.units.qual.A;

public enum Attack {
    NONE("NONE", "NONE", Type.NONE, 0, 0, 0),
    ABSORB("Absorb", "Restores the user's HP by 1/2 of the damage inflicted on the target.", Type.GRASS, 20, 20, 100),
    ACID("Acid", "Has a 10% chance to lower the target's Defense by 1 stage.", Type.POISON, 30, 40, 100),
    ACID_ARMOR("Acid Armor", "Raises the user's Defense by 2 stages.", Type.POISON, 40, 0, 100),
    AERIAL_ACE("Aerial Ace", "Ignores Evasion and Accuracy modifiers and never misses except against Protect, Detect or a target in the middle of Dig, Fly, Dive or Bounce.", Type.FLYING, 20, 60, 100),
    AEROBLAST("Aeroblast", "Has a high critical hit ratio.", Type.FLYING, 5, 100, 95),
    AGILITY("Agility", "Raises the user's Speed by 2 stages.", Type.PSYCHIC, 30, 0, 100),
    AIR_CUTTER("", "", Type.FLYING, 25, 55, 95),
    AMNESIA("", "", Type.PSYCHIC, 20, , ),
    ANCIENTPOWER("", "", Type.ROCK, 5, , ),
    ARM_THRUST("", "", Type.FIGHTING, 20, , ),
    AROMATHERAPY("", "", Type.GRASS, 5, , ),
    ASSIST("", "", Type.NORMAL, 20, , ),
    ASTONISH("", "", Type.GHOST, 15, , ),
    ATTRACT("", "", Type.NORMAL, 15, , ),
    AURORA_BEAM("", "", Type.ICE, 20, , ),
    BARRAGE("", "", Type.NORMAL, 20, , ),
    BARRIER("", "", Type.PSYCHIC, 30, , ),
    BATON_PASS("", "", Type.NORMAL, 40, , ),
    BEAT_UP("", "", Type.DARK, 10, , ),
    BELLY_DRUM("", "", Type.NORMAL, 10, , ),
    BIDE("", "", Type.NORMAL, 10, , ),
    BIND("", "", Type.NORMAL, 20, , ),
    BITE("", "", Type.DARK, 25, , ),
    BLAST_BURN("", "", Type.FIRE, 5, , ),
    BLAZE_KICK("", "", Type.FIRE, 10, , ),
    BLIZZARD("", "", Type.ICE, 5, , ),
    BLOCK("", "", Type.NORMAL, 5, , ),
    BODY_SLAM("", "", Type.NORMAL, 15, , ),
    BONE_CLUB("", "", Type.GROUND, 20, , ),
    BONE_RUSH("", "", Type.GROUND, 10, , ),
    BONEMERANG("", "", Type.GROUND, 10, , ),
    BOUNCE("", "", Type.FLYING, 5, , ),
    BRICK_BRAKE("", "", Type.FIGHTING, 15, , ),
    BUBBLE("", "", Type.WATER, 30, , ),
    BUBBLEBEAM("", "", Type.WATER, 20, , ),
    BULK_UP("", "", Type.FIGHTING, 20, , ),
    BULLET_SEED("", "", Type.GRASS, 30, , ),
    CALM_MIND("", "", Type.PSYCHIC, 20, , ),
    CAMOUFLAGE("", "", Type.NORMAL, 20, , ),
    CHARGE("", "", Type.ELECTRIC, 20, , ),
    CHARM("", "", Type.NORMAL, 20, , ),
    CLAMP("", "", Type.WATER, 10, , ),
    COMET_PUNCH("", "", Type.NORMAL, 15, , ),
    CONFUSE_RAY("", "", Type.GHOST, 10, , ),
    CONFUSION("", "", Type.PSYCHIC, 25, , ),
    CONSTRICT("", "", Type.NORMAL, 35, , ),
    CONVERSION("", "", Type.NORMAL, 30, , ),
    CONVERSION_2("", "", Type.NORMAL, 30, , ),
    COSMIC_POWER("", "", Type.PSYCHIC, 20, , ),
    COTTON_SPORE("", "", Type.GRASS, 40, , ),
    COUNTER("", "", Type.FIGHTING, 20, , ),
    COVET("", "", Type.NORMAL, 40, , ),
    CRABHAMMER("", "", Type.WATER, 10, , ),
    CROSS_CHOP("", "", Type.FIGHTING, 5, , ),
    CRUNCH("", "", Type.DARK, 15, , ),
    CRUSH_CLAW("", "", Type.NORMAL, 10, , ),
    CURSE("", "", Type.UNKNOWN, 10, , ),
    CUT("", "", Type.NORMAL, 30, , ),
    DEFENSE_CURL("", "", Type.NORMAL, 40, , ),
    DESTINY_BOND("", "", Type.GHOST, 5, , ),
    DETECT("", "", Type.FIGHTING, 5, , ),
    DIG("", "", Type.GROUND, 10, , ),
    DISABLE("", "", Type.NORMAL, 20, , ),
    DIVE("", "", Type.WATER , 10, ),
    DIZZY_PUNCH("", "", Type.NORMAL, 10, , ),
    DOOM_DESIRE("", "", Type.STEEL, 5, , ),
    DOUBLE_KICK("", "", Type.FIGHTING, 30, , ),
    DOUBLE_TEAM("", "", Type.NORMAL, 15, , ),
    DOUBLE_EDGE("", "", Type.NORMAL, 15, , ),
    DOUBLE_SLAP("", "", Type.NORMAL, 10, , ),
    DRAGON_CLAW("", "", Type.DRAGON, 15, , ),
    DRAGON_DANCE("", "", Type.DRAGON, 20, , ),
    DRAGON_RAGE("", "", Type.DRAGON, 10, , ),
    DRAGONBREATH("", "", Type.DRAGON, 20, , ),
    DREAM_EATER("", "", Type.PSYCHIC, 15, , ),
    DRILL_PECK("", "", Type.FLYING, 20, , ),
    DYNAMICPUNCH("", "", Type.FIGHTING, 5, , ),
    EARTHQUAKE("", "", Type.GROUND, 10, , ),
    EGG_BOMB("", "", Type.NORMAL, 10, , ),
    EMBER("", "", Type.FIRE, 25, , ),
    ENCORE("", "", Type.NORMAL, 5, , ),
    ENDEAVOR("", "", Type.NORMAL, 5, , ),
    ENDURE("", "", Type.NORMAL, 10, , ),
    ERUPTION("", "", Type.FIRE, 5, , ),
    EXPLOSION("", "", Type.NORMAL, 5, , ),
    EXTRASENSORY("", "", Type.PSYCHIC, 30, , ),
    EXTREMESPEED("", "", Type.NORMAL, 5, , ),
    FACADE("", "", Type.NORMAL, 20, , ),
    FAINT_ATTACK("", "", Type.DARK, 25, , ),
    FAKE_OUT("", "", Type.NORMAL, 10, , ),
    FAKE_TEARS("", "", Type.DARK, 20, , ),
    FALSE_SWIPE("", "", Type.NORMAL, 40, , ),
    FEATHERDANCE("", "", Type.FLYING,15 , , ),
    FIRE_BLAST("", "", Type.FIRE, 5, , ),
    FIRE_PUNCH("", "", Type.FIRE, 15, , ),
    FIRE_SPIN("", "", Type.FIRE, 15, , ),
    FISSURE("", "", Type.GROUND, 5, , ),
    FLAIL("", "", Type.NORMAL, 15, , ),
    FLAME_WHEEL("", "", Type.FIRE, 25, , ),
    FLAME_THROWER("", "", Type.FIRE, 15, , ),
    FLASH("", "", Type.NORMAL, 20, , ),
    FLATTER("", "", Type.DARK, 15, , ),
    FLY("", "", Type.FLYING, 15, , ),
    FOCUS_ENERGY("", "", Type.NORMAL, 30, , ),
    FOCUS_PUNCH("", "", Type.FIGHTING, 20, , ),
    FOLLOW_ME("", "", Type.NORMAL, 20, , ),
    FORESIGHT("", "", Type.NORMAL, 40, , ),
    FRENZY_PLANT("", "", Type.GRASS, 5, , ),
    FRUSTRATION("", "", Type.NORMAL, 20, , ),
    FURY_ATTACK("", "", Type.NORMAL, 20, , ),
    FURY_CUTTER("", "", Type.BUG, 20, , ),
    FURY_SWIPES("", "", Type.NORMAL, 15, , ),
    FUTURE_SIGHT("", "", Type.PSYCHIC, 15, , ),
    GIGA_DRAIN("", "", Type.GRASS, 5, , ),
    GLARE("", "", Type.NORMAL, 30, , ),
    GRASSWHISTLE("", "", Type.GRASS, 15, , ),
    GROWL("", "", Type.NORMAL, 40, , ),
    GROWTH("", "", Type.NORMAL, 40, , ),
    GRUDGE("", "", Type.GHOST, 5, , ),
    GUILLOTINE("", "", Type.NORMAL, 5, , ),
    GUST("", "", Type.FLYING, 35, , ),
    HAIL("", "", Type.ICE, 10, , ),
    HARDEN("", "", Type.NORMAL, 30, , ),
    HAZE("", "", Type.ICE, 30, , ),
    HEADBUTT("", "", Type.NORMAL, 15, , ),
    HEAL_BELL("", "", Type.NORMAL, 5, , ),
    HEAT_WAVE("", "", Type.FIRE, 10, , ),
    HELPING_HAND("", "", Type.NORMAL, 20, , ),
    HI_JUMP_KICK("", "", Type.FIGHTING, 20, , ),
    HIDDEN_POWER("", "", Type.NORMAL, 15, , ),
    HORN_ATTACk("", "", Type.NORMAL, 25, , ),
    HORN_DRILL("", "", Type.NORMAL, 5, , ),
    HOWL("", "", Type.NORMAL, 40, , ),
    HYDRO_CANNON("", "", Type.WATER, 5, , ),
    HYDRO_PUMP("", "", Type.WATER, 5, , ),
    HYPER_BEAM("", "", Type.NORMAL, 5, , ),
    HYPER_FANG("", "", Type.NORMAL, 15, , ),
    HYPER_VOICE("", "", Type.NORMAL, 10, , ),
    HYPNOSIS("", "", Type.PSYCHIC, 20, , ),
    ICE_BALL("", "", Type.ICE, 20, , ),
    ICE_BEAM("", "", Type.ICE, 10, , ),
    ICE_PUNCH("", "", Type.ICE, 15, , ),
    ICICLE_SPEAR("", "", Type.ICE, 30, , ),
    ICY_WIND("", "", Type.ICE, 15, , ),
    IMPRISON("", "", Type.PSYCHIC, 10, , ),
    INGRAIN("", "", Type.GRASS, 20, , ),
    IRON_DEFENSE("", "", Type.STEEL, 15, , ),
    IRON_TAIL("", "", Type.STEEL, 15, , ),
    JUMP_KICK("", "", Type.FIGHTING, 20, , ),
    KARATE_CHOP("", "", Type.FIGHTING, 25, , ),
    KINESIS("", "", Type.PSYCHIC, 15, , ),
    KNOCK_OFF("", "", Type.DARK, 20, , ),
    LEAF_BLADE("", "", Type.GRASS, 15, , ),
    LEECH_LIFE("", "", Type.BUG, 15, , ),
    LEECH_SEED("", "", Type.GRASS, 10, , ),
    LEER("", "", Type.NORMAL, 30, , ),
    LICK("", "", Type.GHOST, 30, , ),
    LIGHT_SCREEN("", "", Type.PSYCHIC, 30, , ),
    LOCK_ON("", "", Type.NORMAL, 5, , ),
    LOVELY_KISS("", "", Type.NORMAL, 10, , ),
    LOW_KICK("", "", Type.FIGHTING, 20, , ),
    LUSTER_PURGE("", "", Type.PSYCHIC, 5, , ),
    MACH_PUNCH("", "", Type.FIGHTING, 30, , ),
    MAGIC_COAT("", "", Type.PSYCHIC, 15, , ),
    MAGIC_LEAF("", "", Type.GRASS, 20, , ),
    MAGNITUDE("", "", Type.GROUND, 30, , ),
    MEAN_LOOK("", "", Type.NORMAL, 5, , ),
    MEDITATE("", "", Type.PSYCHIC, 40, , ),
    MEGA_DRAIN("", "", Type.GRASS, 10, , ),
    MEGA_KICK("", "", Type.NORMAL, 5, , ),
    MEGA_PUNCH("", "", Type.NORMAL, 20, , ),
    MEGAHORN("", "", Type.BUG, 10, , ),
    MEMENTO("", "", Type.DARK, 10, , ),
    METAL_CLAW("", "", Type.STEEL, 35, , ),
    METAL_SOUND("", "", Type.STEEL, 40, , ),
    METEOR_MASH("", "", Type.STEEL, 10, , ),
    METRONOME("", "", Type.NORMAL, 10, , ),
    MILK_DRINK("", "", Type.NORMAL, 10, , ),
    MIMIC("", "", Type.NORMAL, 10, , ),
    MIND_READER("", "", Type.NORMAL, 5, , ),
    MINIMIZE("", "", Type.NORMAL, 20, , ),
    MIRROR_COAT("", "", Type.PSYCHIC, 20, , ),
    MIRROR_MOVE("", "", Type.FLYING, 20, , ),
    MIST("", "", Type.ICE, 30, , ),
    MIST_BALL("", "", Type.PSYCHIC, 5, , ),
    MOONLIGHT("", "", Type.NORMAL, 5, , ),
    MORNING_SUN("", "", Type.NORMAL, 5, , ),
    MUD_SHOT("", "", Type.GROUND, 15, , ),
    MUD_SPORT("", "", Type.GROUND, 15, , ),
    MUD_SLAP("", "", Type.GROUND, 10, , ),
    MUDDY_WATER("", "", Type.WATER, 10, , ),
    NATURE_POWER("", "", Type.NORMAL, 20, , ),
    NEEDLE_ARM("", "", Type.GRASS, 15, , ),
    NIGHT_SHADE("", "", Type.GHOST, 15, , ),
    NIGHTMARE("", "", Type.GHOST, 15, , ),
    OCTAZOOKA("", "", Type.WATER, 10, , ),
    ODOR_SLEUTH("", "", Type.NORMAL, 40, , ),
    OUTRAGE("", "", Type.DRAGON, 20, , ),
    OVERHEAT("", "", Type.FIRE, 5, , ),
    PAIN_SPLIT("", "", Type.NORMAL, , , ),
    PAY_DAY("", "", Type.NORMAL, , , ),
    PECK("", "", Type.FLYING, , , ),
    PERISH_SONG("", "", Type.NORMAL, , , ),
    PETAL_DANCE("", "", Type.GRASS, , , ),
    PIN_MISSILE("", "", Type.BUG, , , ),
    POISON_FANG("", "", Type.POISON, , , ),
    POISON_GAS("", "", Type.POISON, , , ),
    POISON_STING("", "", Type.POISON, , , ),
    POISON_TAIL("", "", Type.POISON, , , ),
    POISONPOWDER("", "", Type.POISON, , , ),
    POUND("", "", Type.NORMAL, , , ),
    POWDER_SNOW("", "", Type.ICE, , , ),
    PRESENT("", "", Type.NORMAL, , , ),
    PROTECT("", "", Type.NORMAL, , , ),
    PSYBEAM("", "", Type.PSYCHIC, , , ),
    PSYCH_UP("", "", Type.NORMAL, , , ),
    PSYCHIC("", "", Type.PSYCHIC, , , ),
    PSYCHO_BOOST("", "", Type.PSYCHIC, , , ),
    PSYWAVE("", "", Type.PSYCHIC, , , ),
    PURSUIT("", "", Type.DARK, , , ),
    QUICK_ATTACK("", "", Type.NORMAL, , , ),
    RAGE("", "", Type.NORMAL, , , ),
    RAIN_DANCE("", "", Type.WATER, , , ),
    RAPID_SPIN("", "", Type.NORMAL, , , ),
    RAZOR_LEAF("", "", Type.GRASS, , , ),
    RAZOR_WIND("", "", Type.NORMAL, , , ),
    RECOVER("", "", Type.NORMAL, , , ),
    RECYCLE("", "", Type.NORMAL, , , ),
    REFLECT("", "", Type.PSYCHIC, , , ),
    REFRESH("", "", Type.NORMAL, , , ),
    REST("", "", Type.PSYCHIC, , , ),
    RETURN("", "", Type.NORMAL, , , ),
    REVENGE("", "", Type.FIGHTING, , , ),
    REVERSAL("", "", Type.FIGHTING, , , ),
    ROAR("", "", Type.NORMAL, , , ),
    ROCK_BLAST("", "", Type.ROCK, , , ),
    ROCK_SLIDE("", "", Type.ROCK, , , ),
    ROCK_SMASH("", "", Type.FIGHTING, , , ),
    ROCK_THROW("", "", Type.ROCK, , , ),
    ROCK_TOMB("", "", Type.ROCK, , , ),
    ROLE_PLAY("", "", Type.PSYCHIC, , , ),
    ROLLING_KICK("", "", Type.FIGHTING, , , ),
    ROLLOUT("", "", Type.ROCK, , , ),
    SACRED_FIRE("", "", Type.FIRE, , , ),
    SAFEGUARD("", "", Type.NORMAL, , , ),
    SAND_TOMB("", "", Type.GROUND, , , ),
    SAND_ATTACK("", "", Type.GROUND, , , ),
    SANDSTORM("", "", Type.ROCK, , , ),
    SCARY_FACE("", "", Type.NORMAL, , , ),
    SCRATCH("", "", Type.NORMAL, , , ),
    SCREECH("", "", Type.NORMAL, , , ),
    SECRET_POWER("", "", Type.NORMAL, , , ),
    SEISMIC_TOSS("", "", Type.FIGHTING, , , ),
    SELFDESTRUCT("", "", Type.NORMAL, , , ),
    SHADOW_BALL("", "", Type.GHOST, , , ),
    SHADOW_PUNCH("", "", Type.GHOST, , , ),
    SHARPEN("", "", Type.NORMAL, , , ),
    SHEER_COLD("", "", Type.ICE, , , ),
    SHOCK_WAVE("", "", Type.ELECTRIC, , , ),
    SIGNAL_BEAM("", "", Type.BUG, , , ),
    SILVER_WIND("", "", Type.BUG, , , ),
    SING("", "", Type.NORMAL, , , ),
    SKETCH("", "", Type.NORMAL, , , ),
    SKILL_SWAP("", "", Type.PSYCHIC, , , ),
    SKULL_BASH("", "", Type.NORMAL, , , ),
    SKY_ATTACK("", "", Type.FLYING, , , ),
    SKY_UPPERCUT("", "", Type.FIGHTING, , , ),
    SLACK_OFF("", "", Type.NORMAL, , , ),
    SLAM("", "", Type.NORMAL, , , ),
    SLASH("", "", Type.NORMAL, , , ),
    SLEEP_POWDER("", "", Type.GRASS, , , ),
    SLEEP_TALK("", "", Type.NORMAL, , , ),
    SLUDGE("", "", Type.POISON, , , ),
    SLUDGE_BOMB("", "", Type.POISON, , , ),
    SMELLINGSALT("", "", Type.NORMAL, , , ),
    SMOG("", "", Type.POISON, , , ),
    SMOKESCREEN("", "", Type.NORMAL, , , ),
    SNATCH("", "", Type.DARK, , , ),
    SNORE("", "", Type.NORMAL, , , ),
    SOFTBOILED("", "", Type.NORMAL, , , ),
    SOLARBEAM("", "", Type.GRASS, , , ),
    SONICBOOM("", "", Type.NORMAL, , , ),
    SPARK("", "", Type.ELECTRIC, , , ),
    SPIDER_WEB("", "", Type.BUG, , , ),
    SPIKE_CANNON("", "", Type.NORMAL, , , ),
    SPIKES("", "", Type.GROUND, , , ),
    SPIT_UP("", "", Type.NORMAL, , , ),
    SPITE("", "", Type.GHOST, , , ),
    SPLASH("", "", Type.NORMAL, , , ),
    SPORE("", "", Type.GRASS, , , ),
    STEEL_WING("", "", Type.STEEL, , , ),
    STOCKPILE("", "", Type.NORMAL, , , ),
    STOMP("", "", Type.NORMAL, , , ),
    STRENGTH("", "", Type.NORMAL, , , ),
    STRING_SHOT("", "", Type.BUG, , , ),
    STRUGGLE("", "", Type.NONE, , , ),
    STUN_SPORE("", "", Type.GRASS, , , ),
    SUBMISSION("", "", Type.FIGHTING, , , ),
    SUBSTITUTE("", "", Type.NORMAL, , , ),
    SUNNY_DAY("", "", Type.FIRE, , , ),
    SUPER_FANG("", "", Type.NORMAL, , , ),
    SUPERPOWER("", "", Type.FIGHTING, , , ),
    SUPERSONIC("", "", Type.NORMAL, , , ),
    SURF("", "", Type.WATER, , , ),
    SWAGGER("", "", Type.NORMAL, , , ),
    SWALLOW("", "", Type.NORMAL, , , ),
    SWEET_KISS("", "", Type.NORMAL, , , ),
    SWEET_SCENT("", "", Type.NORMAL, , , ),
    SWIFT("", "", Type.NORMAL, , , ),
    SWORDS_DANCE("", "", Type.NORMAL, , , ),
    SYNTHESIS("", "", Type.GRASS, , , ),
    TACKLE("", "", Type.NORMAL, , , ),
    TAIL_GLOW("", "", Type.BUG, , , ),
    TAIL_WHIP("", "", Type.NORMAL, , , ),
    TAKE_DOWN("", "", Type.NORMAL, , , ),
    TAUNT("", "", Type.DARK, , , ),
    TEETER_DANCE("", "", Type.NORMAL, , , ),
    TELEPORT("", "", Type.PSYCHIC, , , ),
    THIEF("", "", Type.DARK, , , ),
    THRASH("", "", Type.NORMAL, , , ),
    THUNDER("", "", Type.ELECTRIC, , , ),
    THUNDER_WAVE("", "", Type.ELECTRIC, , , ),
    THUNDERBOLT("", "", Type.ELECTRIC, , , ),
    THUNDERPUNCH("", "", Type.ELECTRIC, , , ),
    THUNDERSHOCK("", "", Type.ELECTRIC, , , ),
    TICKLE("", "", Type.NORMAL, , , ),
    TORMENT("", "", Type.DARK, , , ),
    TOXIC("", "", Type.POISON, , , ),
    TRANSFORM("", "", Type.NORMAL, , , ),
    TRI_ATTACK("", "", Type.NORMAL, , , ),
    TRICK("", "", Type.PSYCHIC, , , ),
    TRIPLE_KICK("", "", Type.FIGHTING, , , ),
    TWINEEDLE("", "", Type.BUG, , , ),
    TWISTER("", "", Type.DRAGON, , , ),
    UPROAR("", "", Type.NORMAL, , , ),
    VICEGRIP("", "", Type.NORMAL, , , ),
    VINE_WHIP("", "", Type.GRASS, , , ),
    VITAL_THROW("", "", Type.FIGHTING, , , ),
    VOLT_TACKLE("", "", Type.ELECTRIC, , , ),
    WATER_GUN("", "", Type.WATER, , , ),
    WATER_PULSE("", "", Type.WATER, , , ),
    WATER_SPORT("", "", Type.WATER, , , ),
    WATER_SPOUT("", "", Type.WATER, , , ),
    WATERFALL("", "", Type.WATER, , , ),
    WEATHER_BALL("", "", Type.NORMAL, , , ),
    WHIRLPOOL("", "", Type.WATER, , , ),
    WHIRLWIND("", "", Type.NORMAL, , , ),
    WILL_O_WISP("", "", Type.FIRE, , , ),
    WING_ATTACK("", "", Type.FLYING, , , ),
    WISH("", "", Type.NORMAL, , , ),
    WITHDRAW("", "", Type.WATER, , , ),
    WRAP("", "", Type.NORMAL, , , ),
    YAWN("", "", Type.NORMAL, , , ),
    ZAP_CANNON("Zap Cannon", "Paralyzes the target.", Type.ELECTRIC, 5, 100, 50);





    private final String name;
    private final String effect;
    private final Type type;
    private final int pp;
    private final int power;
    private final int accuracy;

    Attack(String name, String effect, Type type, int pp, int power, int accuracy) {
        this.name = name;
        this.effect = effect;
        this.type = type;
        this.pp = pp;
        this.power = power;
        this.accuracy = accuracy;
    }

   public String getName() {
        return name;
   }

    public String getEffect() {
        return effect;
    }

    public Type getType() {
        return type;
    }

    public int getPP() {
        return pp;
    }

    public int getPower() {
        return power;
    }
    public int getAccuracy() {
        return accuracy;
    }
}
